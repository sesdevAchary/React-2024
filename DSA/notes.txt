javac methods.java => java methods 


O(logn)- binary search ; equally into 2 halves
O(1)- constant and for linear program 
O(n)- for single unassociated loops
O(n^2)-for nested loops
O(nlogn)- for merge and quick sort
O(2^n)	Exponential	Recursion with 2 branches (Fibonacci)
.....................................................................................................
->METHODS purpose....
calling a static fun then no obj req but vice versa

->System.out.println(Arrays.toString(arr));
It takes an array (like int[]) and returns a string representation of its contents.

->  for(int element: array) looping foreach..
->   return str.charAt(0).toUpperCase() + str.slice(1);   capitalizing the first word


->public = accessible everywhere
private =  accessible only inside the same class
protected =  accessible in: same package ✔ + subclasses (even in different packages) ✔


->this.name = name; → Assigns the value of the parameter to the class variable.



.......................................................................................................

-> s.length() , s.charAt(0) , s.substring(1,4) , (a.equals(b)) , a.compareTo(b) , s.indexOf('p')
-> for(char c:s.toCharArray())  // converts the s to char array //
->if("aeiou".indexOf(c) !=-1) // // checks the aeiou in index of char c 
-> while(left<right){
    if ( s.charAt(left++) != s.charAt(right--)) }  // palindrome checker 