 /*useEffect= A react hook that is added up when
           the component re renders / mounts 

useEffect(function,[dependency])

useEffect(()=>{})   // runs after every re render 
useEffect ( ()=>{},[])
useEffect ( ()=>{},[value]) // runs only after mounting , unless  after every re rendering + value changes  */


function Car(props) {
  return <h2>I am a { props.brand }!</h2>;
}

function Garage() {
  return (
    <>
      <h1>Who lives in my garage?</h1>
      <Car brand="Ford" />
    </>
  );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Garage />);






function Car(props) {
  return <h2>I am a { props.brand }!</h2>;
}

function Garage() {
  const carName = "Ford";
  return (
    <>
      <h1>Who lives in my garage?</h1>
      <Car brand={ carName } />
    </>
  );
}

const root2 = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Garage />);






function Car(props) {
  return <h2>I am a { props.brand.model }!</h2>;
}

function Garage() {
  const carInfo = { name: "Ford", model: "Mustang" };
  return (
    <>
      <h1>Who lives in my garage?</h1>
      <Car brand={ carInfo } />
    </>
  );
}

const root1 = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Garage />);






// index.js

import React from "react";
import ReactDOM from "react-dom/client";

// functional component to illustrate props
function DemoComponent(props) {
    return (
        <div>
            {/*accessing information from props */}
            <h2>Hello {props.user}</h2>
            <h3>Welcome to GeeksforGeeks</h3>
        </div>
    );
}

const root6 = ReactDOM.createRoot(document.getElementById("root"));
root.render(
    <React.StrictMode>
        <DemoComponent user="Geeks" />
    </React.StrictMode>
);

// index.js

import React from "react";
import ReactDOM from "react-dom/client";

// Parent Component
class Parent extends React.Component {
    render() {
        return (
            <div>
                <h2>You are inside Parent Component</h2>
                <Child name="User" userId="5555" />
            </div>
        );
    }
}

// Child Component
class Child extends React.Component {
    render() {
        return (
            <div>
                <h2>Hello, {this.props.name}</h2>
                <h3>You are inside Child Component</h3>
                <h3>Your user id is: {this.props.userId}</h3>
            </div>
        );
    }
}

const root5 = ReactDOM.createRoot(document.getElementById("root"));
root.render(
    <React.StrictMode>
        <Parent />
    </React.StrictMode>
);



// index.js

import React from "react";
import ReactDOM from "react-dom/client";

// Parent Component
class Parent extends React.Component {
    render() {
        return (
            <div>
                <h2>You are inside Parent Component</h2>
                <Child name="User" userId="5555" />
            </div>
        );
    }
}

// Child Component
class Child extends React.Component {
    render() {
        console.log(this.props);
        return (
            <div>
                <h2>Hello, {this.props.name}</h2>
                <h3>You are inside Child Component</h3>
                <h3>Your user id is: {this.props.userId}</h3>
            </div>
        );
    }
}

const root7 = ReactDOM.createRoot(document.getElementById("root"));
root.render(
    <React.StrictMode>
        <Parent />
    </React.StrictMode>
);