 /*useEffect= A react hook that is added up when
           the component re renders / mounts 

useEffect(function,[dependency])

useEffect(()=>{})   // runs after every re render 
useEffect ( ()=>{},[])
useEffect ( ()=>{},[value]) // runs only after mounting , unless  after every re rendering + value changes  */

import react from 'react'


import React, { Component } from 'react';  
import ReactDOM from 'react-dom';  
import "react-responsive-carousel/lib/styles/carousel.min.css"; // requires a loader  
import { Carousel } from 'react-responsive-carousel';  
   
const fadeAnimationHandler: AnimationHandler = (props, state): AnimationHandlerResponse => {  
    const transitionTime = props.transitionTime + 'ms';  
    const transitionTimingFunction = 'ease-in-out';  
   
    let slideStyle: React.CSSProperties = {  
        position: 'absolute',  
        display: 'block',  
        zIndex: -2,  
        minHeight: '100%',  
        opacity: 0,  
        top: 0,  
        right: 0,  
        left: 0,  
        bottom: 0,  
        transitionTimingFunction: transitionTimingFunction,  
        msTransitionTimingFunction: transitionTimingFunction,  
        MozTransitionTimingFunction: transitionTimingFunction,  
        WebkitTransitionTimingFunction: transitionTimingFunction,  
        OTransitionTimingFunction: transitionTimingFunction,  
    };  
   
    if (!state.swiping) {  
        slideStyle = {  
            ...slideStyle,  
            WebkitTransitionDuration: transitionTime,  
            MozTransitionDuration: transitionTime,  
            OTransitionDuration: transitionTime,  
            transitionDuration: transitionTime,  
            msTransitionDuration: transitionTime,  
        };  
    }  
   
    return {  
        slideStyle,  
        selectedStyle: { ...slideStyle, opacity: 1, position: 'relative' },  
        prevStyle: { ...slideStyle },  
    };  
};  



import React, { Component } from 'react';  
import ReactDOM from 'react-dom';  
import "react-responsive-carousel/lib/styles/carousel.min.css"; // requires a loader  
import { Carousel } from 'react-responsive-carousel';  
   
class DemoCarousel extends Component {  
    render() {  
        return (  
            <Carousel>  
                <div>  
                    <img src="assets/1.jpeg" />  
                    <p className="legend">Legend 1</p>  
                </div>  
                <div>  
                    <img src="assets/2.jpeg" />  
                    <p className="legend">Legend 2</p>  
                </div>  
                <div>  
                    <img src="assets/3.jpeg" />  
                    <p className="legend">Legend 3</p>  
                </div>  
            </Carousel>  
        );  
    }  
});  


import React, { useState } from 'react';  
function Counter() {  
  // Initialize the state with an initial value of 0  
  const [count, setCount] = useState(0);  
  // Event handler for incrementing the count  
  const handleIncrement = () => {  
    setCount(count + 1); // Update the count using setCount  
  };  
  
  return (  
    <div>  
      <h1>Counter: {count}</h1>  
      <button onClick={handleIncrement}>Increment</button>  
    </div>  
  );  
}  
export default Counter;  

unction Parent() {  
    const [count, setCount] = useState(0);  
    
    return (  
      <div>  
        <Child count={count} />  
        <button onClick={() => setCount(count + 1)}>Increment</button>  
      </div>  
    );  
  }  
    
  function Child({ count }) {  
    return <p>Count: {count}</p>;  
  }  