//  import React ,{useState} from 'react'

// // function myComponent(){
// //     const[food,setFood]=  useState( [" orange","olive"] );

// // function addFruit(){
// //    const newFood= document.getElementById(" foodId ").value=" ";

// //    setFood([...food,newFood]); // it will add the new fruit name with orange and olive //

// // }


// // return(
// //     <div>LIst of Fruits 
// //     <ul>
// //      {foods.map((food,index)=><li key={index}>{food}</li>)}
// //     </ul>

// //     <input type ="text" id ="foodId" placeholder="Add new food here " />
// //     <button onClick={addFruit}> add food here </button>

// //     </div>
// // )



// // }

// // export default myComponent;


// function Welcome(props) {
//   return <h1>Hello, {props.name}</h1>;
// }

// const element = <Welcome name="Faisal Arkan" />;
// ReactDOM.render(
//   element,
//   document.getElementById('root')
// );



// class Cat extends React.Component {
//     constructor(props) {
//       super(props);
  
//       this.state = {
//         humor: 'happy'
//       }
//     }
//     render() {
//       return(
//         <div>
//           <h1>{this.props.name}</h1>
//           <p>
//             {this.props.color}
//           </p>
//         </div>
//       );
//     }
//   }


//   import { useState } from "react";
// import ReactDOM from "react-dom/client";

// function FavoriteColor() {
//   const [color, setColor] = useState("red");

//   return <h1>My favorite color is {color}!</h1>
// }

// const root = ReactDOM.createRoot(document.getElementById('root'));
// root.render(<FavoriteColor />);




// function FavoriteColor() {
//   const [color, setColor] = useState("red");

//   return (
//     <>
//       <h1>My favorite color is {color}!</h1>
//       <button
//         type="button"
//         onClick={() => setColor("blue")}
//       >Blue</button>
//     </>
//   )
// }

// const root1 = ReactDOM.createRoot(document.getElementById('root'));
// root.render(<FavoriteColor />);




// function Car() {
//   const [brand, setBrand] = useState("Ford");
//   const [model, setModel] = useState("Mustang");
//   const [year, setYear] = useState("1964");
//   const [color, setColor] = useState("red");

//   return (
//     <>
//       <h1>My {brand}</h1>
//       <p>
//         It is a {color} {model} from {year}.
//       </p>
//     </>
//   )
// }

// const root = ReactDOM.createRoot(document.getElementById('root'));
// root.render(<Car />);





// class App extends Component {
//   constructor(props) {
//       super(props);

//       // Set initial state
//       this.state = {
//           greeting:
//               "Click the button to receive greetings",
//       };

//       // Binding this keyword
//       this.updateState = this.updateState.bind(this);
//   }

//   updateState() {
//       // Changing state
//       this.setState({
//           greeting: "GeeksForGeeks welcomes you !!",
//       });
//   }

//   render() {
//       return (
//           <div>
//               <h2>Greetings Portal</h2>
//               <p>{this.state.greeting}</p>

//               {/* Set click handler */}
//               <button onClick={this.updateState}>
//                   Click me!
//               </button>
//           </div>
//       );
//   }
// }

// export default App;




// lass App extends Component {
//   constructor(props) {
//       super(props);

//       // Set initial state
//       this.state = {
//           test: "Nil",
//           questions: "0",
//           students: "0",
//       };

//       // Binding this keyword
//       this.updateState = this.updateState.bind(this);
//   }

//   updateState() {
//       // Changing state
//       this.setState({
//           test: "Programming Quiz",
//           questions: "10",
//           students: "30",
//       });
//   }

//   render() {
//       return (
//           <div>
//               <h2>Test Portal</h2>
//               <p>{this.state.test}</p>

//               <p>{this.state.questions}</p>

//               <p>{this.state.students}</p>
//               {/* Set click handler */}
//               <button onClick={this.updateState}>
//                   Click me!
//               </button>
//           </div>
//       );
//   }
// }

// export default App;





// class App extends Component {
//   static defaultProps = {
//       testTopics: [
//           "React JS",
//           "Node JS",
//           "Compound components",
//           "Lifecycle Methods",
//           "Event Handlers",
//           "Router",
//           "React Hooks",
//           "Redux",
//           "Context",
//       ],
//   };

//   constructor(props) {
//       super(props);

//       // Set initial state
//       this.state = {
//           testName: "React js Test",
//           topics: "",
//       };

//       // Binding this keyword
//       this.updateState = this.updateState.bind(this);
//   }

//   listOfTopics() {
//       return (
//           <ul>
//               {this.props.testTopics.map((topic) => (
//                   <li>{topic}</li>
//               ))}
//           </ul>
//       );
//   }

//   updateState() {
//       // Changing state
//       this.setState({
//           testName: "Test topics are:",
//           topics: this.listOfTopics(),
//       });
//   }

//   render() {
//       return (
//           <div>
//               <h2>Test Information</h2>
//               <p>{this.state.testName}</p>
//               <p>{this.state.topics}</p>
//               {/* Set click handler */}
//               <button onClick={this.updateState}>
//                   Click me!
//               </button>
//           </div>
//       );
//   }
// }

// export default App;




// class App extends Component {
//   constructor(props) {
//       super(props);

//       // Set initial state
//       this.state = {
//           count: 0,
//       };

//       // Binding this keyword
//       this.updateState = this.updateState.bind(this);
//   }

//   updateState() {
//       // Changing state
//       this.setState((prevState) => {
//           return { count: prevState.count + 1 };
//       });
//   }

//   render() {
//       return (
//           <div>
//               <h2>Click Counter</h2>
//               <p>
//                   You have clicked me {this.state.count}{" "}
//                   times.
//               </p>
//               {/* Set click handler */}
//               <button onClick={this.updateState}>
//                   Click me!
//               </button>
//           </div>
//       );
//   }
// }



// // Filename - App.js

// import React, { useState } from 'react';

// function App() {
//     const [click, setClick] = useState([]);

//     const addNumber = () => {
//         setClick([
//             ...click,
//             {
//                 id: click.length,
//                 value: Math.random() * 10
//             }
//         ]);
//     };

//     return (
//         <div>
//             <ul>
//                 {click.map(item => (
//                     <li key={item.id}>{item.value}</li>
//                 ))}
//             </ul>
//             <button onClick={addNumber}>
//                 Click me
//             </button>
//         </div>
//     );
// }

// export default App;



// import React from 'react';

// class MyComponent extends React.Component {
//     constructor(props) {
//         super(props);
//         this.state = {
//             brand: 'Ford', // Example property in the state
//         };
//     }

//     render() {
//         return (
//             <div>
//                 <h1>My Car</h1>
//                 {/* Other component content */}
//             </div>
//         );
//     }
// }

// export default MyComponent;





// import React from "react";
// import ReactDOM from "react-dom/client";

// class App extends React.Component {
//     constructor(props) {
//         super(props);
//         this.state = {
//             count: 0,
//         };
//     }



//     // Filename - App.js 

// import React, { useState } from 'react';

// function App() {
//     const [data, setData] = useState({
//         username: '',
//         password: ''
//     });
//     const [form, setForm] = useState({
//         username: '',
//         password: ''
//     });
//     const [submit, submitted] = useState(false);

//     const printValues = e => {
//         e.preventDefault();
//         setForm({
//             username: data.username,
//             password: data.password
//         });
//         submitted(true);
//     };

//     const updateField = e => {
//         setData({
//             ...data,
//             [e.target.name]: e.target.value
//         });
//     };

//     return (
//         <div>
//             <form onSubmit={printValues}>
//                 <label>
//                     Username:
//                     <input
//                         value={data.username}
//                         name="username"
//                         onChange={updateField}
//                     />
//                 </label>
//                 <br />
//                 <label>
//                     Password:
//                     <input
//                         value={data.password}
//                         name="password"
//                         type="password"
//                         onChange={updateField}
//                     />
//                 </label>
//                 <br />
//                 <button>Submit</button>
//             </form>

//             <p>{submit ? form.username : null}</p>

//             <p>{submit ? form.password : null}</p>
//         </div>
//     );
// }

// export default App;

//     increment = () => {
//         this.setState((prevState) => ({
//             count: prevState.count + 1,
//         }));
//     };

//     decrement = () => {
//         this.setState((prevState) => ({
//             count: prevState.count - 1,
//         }));
//     };

//     render() {
//         return (
//             <div>
//                 <h1>
//                     The current count is :{" "}
//                     {this.state.count}
//                 </h1>
//                 <button onClick={this.increment}>
//                     Increase
//                 </button>
//                 <button onClick={this.decrement}>
//                     Decrease
//                 </button>
//             </div>
//         );
//     }
// }

// const root = ReactDOM.createRoot(
//     document.getElementById("root")
// );
// root.render(
//     <React.StrictMode>
//         <App />
//     </React.StrictMode>
// );


// // Filename - App.js

// import React, { useState } from 'react';

// function App() {
//     const click = useState('GeeksForGeeks');
//     return (
//         <h1>Welcome to {click}</h1>
//     );
// }

// export default App; 


// // Filename - App.js

// import React, { useState } from 'react';

// function App() {
//     const [click, setClick] = useState(0);
//     // using array destructuring here 
//     // to assign initial value 0
//     // to click and a reference to the function 
//     // that updates click to setClick
//     return (
//         <div>
//             <p>You clicked {click} times</p>

//             <button onClick={() => setClick(click + 1)}>
//                 Click me
//             </button>
//         </div>
//     );
// }






// // App.js

// import React from 'react';
// import FlipCoin from './components/FlipCoin'

// const App=()=> {
//   return (
//     <div className="App">
//       <FlipCoin />
//     </div>
//   );
// }

// export default App;




class Car extends React.Component {
    render() {
      return <h2>Hi, I am a Car!</h2>;
    }
  }

  const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Car />);

class Car extends React.Component {
    constructor() {
      super();
      this.state = {color: "red"};
    }
    render() {
      return <h2>I am a Car!</h2>;
    }
  }

  class Car extends React.Component {
    constructor() {
      super();
      this.state = {color: "red"};
    }
    render() {
      return <h2>I am a {this.state.color} Car!</h2>;
    }
  }
  class Car extends React.Component {
    render() {
      return <h2>I am a {this.props.color} Car!</h2>;
    }
  }
  
  const root = ReactDOM.createRoot(document.getElementById('root'));
  root.render(<Car color="red"/>);


  class Car extends React.Component {
    constructor(props) {
      super(props);
    }
    render() {
      return <h2>I am a {this.props.model}!</h2>;
    }
  }
  
  const root = ReactDOM.createRoot(document.getElementById('root'));
  root.render(<Car model="Mustang"/>);


  
function Timer() {
  const [count, setCount] = useState(0);

  useEffect(() => {
    setTimeout(() => {
      setCount((count) => count + 1);
    }, 1000);
  });
  return <h1>I've rendered {count} times!</h1>;
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Timer />);

function Timer() {
  const [count, setCount] = useState(0);

  useEffect(() => {
    setTimeout(() => {
      setCount((count) => count + 1);
    }, 1000);
  }, []);
  
  return <h1>I've rendered {count} times!</h1>;
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Timer />);

function Counter() {
  const [count, setCount] = useState(0);
  const [calculation, setCalculation] = useState(0);

  useEffect(() => {
    setCalculation(() => count * 2);
  }, [count]);