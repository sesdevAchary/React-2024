class EventEmitter {
  constructor() {
    this.events = {};
  }

  on(event, listener) {
    if (!this.events[event]) this.events[event] = [];
    this.events[event].push(listener);
  }

  emit(event, ...args) {
    if (this.events[event]) {
      this.events[event].forEach(fn => fn(...args));
    }
  }

  off(event, listener) {
    this.events[event] = this.events[event].filter(fn => fn !== listener);
  }
}

const emitter = new EventEmitter();
emitter.on('sayHi', name => console.log(`Hi, ${name}`));
emitter.emit('sayHi', 'Alice');
function deepClone(obj) {
  if (obj === null || typeof obj !== 'object') return obj;
  if (Array.isArray(obj)) return obj.map(deepClone);

  const clone = {};
  for (const key in obj) {
    clone[key] = deepClone(obj[key]);
  }
  return clone;
}
async function fetchData(url) {
  try {
    const response = await fetch(url);
    if (!response.ok) throw new Error('Network error');
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.error('Fetch failed:', error);
  }
}

fetchData('https://jsonplaceholder.typicode.com/posts/1');
const validator = {
  set(obj, prop, value) {
    if (prop === 'age' && (value < 0 || value > 120)) {
      throw new RangeError('Invalid age');
    }
    obj[prop] = value;
    return true;
  }
};

const person = new Proxy({}, validator);
person.age = 30; // OK
// person.age = -5; // Throws
const worker = new Worker('worker.js');
worker.postMessage(10);

worker.onmessage = function(e) {
  console.log('Factorial is', e.data);
};
function logger(fn) {
  return function(...args) {
    console.log(`Calling ${fn.name} with`, args);
    const result = fn(...args);
    console.log(`Result: ${result}`);
    return result;
  };
}

const sum = (a, b) => a + b;
const loggedSum = logger(sum);
loggedSum(4, 5);
Promise.resolve(1)
  .then(val => {
    console.log(val);
    return val * 2;
  })
  .then(val => {
    console.log(val);
    return val * 3;
  })
  .then(val => {
    console.log(val);
  });
  function reactive(obj, callback) {
    return new Proxy(obj, {
      set(target, key, value) {
        target[key] = value;
        callback(key, value);
        return true;
      }
    });
  }
  
  const data = reactive({ name: 'Alice' }, (key, value) => {
    console.log(`Property ${key} changed to ${value}`);
  });
  
  data.name = 'Bob';
  function memoize(fn) {
    const cache = {};
    return function(...args) {
      const key = JSON.stringify(args);
      if (cache[key]) return cache[key];
      const result = fn(...args);
      cache[key] = result;
      return result;
    };
  }
  
  const slowAdd = (a, b) => {
    for (let i = 0; i < 1e6; i++) {} // Simulate heavy computation
    return a + b;
  };
  
  const fastAdd = memoize(slowAdd);
  console.log(fastAdd(5, 10));
  function debounce(func, delay) {
    let timer;
    return function(...args) {
      clearTimeout(timer);
      timer = setTimeout(() => func.apply(this, args), delay);
    };
  }
  
  window.addEventListener('resize', debounce(() => {
    console.log('Resized!');
  }, 300));
  for (let i = 1; i <= 5; i++) {
    console.log("Count:", i);
  }
  <button onclick="changeText()">Click Me</button>
  <p id="text">Original Text</p>
  
  <script>
    function changeText() {
      document.getElementById("text").innerHTML = "Text Changed!";
    }
  </script>
  let fruits = ["Apple", "Banana", "Mango"];
  fruits.forEach(function(fruit) {
    console.log(fruit);
  });
  let person = {
    name: "John",
    age: 30
  };
  console.log(person.name); // John
  let name = prompt("Enter your name:");
console.log("Hello, " + name + "!");
setTimeout(function() {
  console.log("This message appears after 2 seconds");
}, 2000);
function multiply(x, y) {
  return x * y;
}
console.log(multiply(3, 4));
let num = 7;
if (num % 2 === 0) {
  console.log("Even");
} else {
  console.log("Odd");
}
// Function to check if a number is prime
function isPrime(num) {
  if (num <= 1) return false;
  for (let i = 2; i <= Math.sqrt(num); i++) {
      if (num % i === 0) return false;
  }
  return true;
}

// Test the function
console.log("Is 17 prime?", isPrime(17)); // Output: true
console.log("Is 4 prime?", isPrime(4));   // Output: false

// Function to reverse a string
function reverseString(str) {
  return str.split("").reverse().join("");
}

// Test the function
console.log("Reverse of 'hello':", reverseString("hello")); // Output: olleh
// Function to find maximum element in an array
function findMax(arr) {
  return Math.max(...arr);
}

// Test the function
const values = [10, 5, 8, 12, 3];
console.log("Maximum value:", findMax(values)); // Output: 12
<!DOCTYPE html>
<html>
<head>
    <title>Change Background Color</title>
</head>
<body>
    <script src="artifact10.js"></script>
</body>
</html>
// Function to count vowels in a string
function countVowels(str) {
  const vowels = /[aeiou]/gi;
  return (str.match(vowels) || []).length;
}

// Test the function
console.log("Vowels in 'javascript':", countVowels("javascript")); // Output: 3
let a = 5;
let b = 10;
let sum = a + b;
console.log("Sum:", sum);
let fruits = ["Apple", "Banana", "Orange"];
fruits.forEach(fruit => console.log(fruit));
function greet(name) {
  return "Hello, " + name + "!";
}
console.log(greet("Alice"));
let today = new Date();
console.log(today.toDateString());
let str = "hello";
let reversed = str.split("").reverse().join("");
console.log(reversed);
let x = 10, y = 20, z = 15;
let max = Math.max(x, y, z);
console.log("Max:", max);
document.getElementById("demo").textContent = "Text changed!";
document.getElementById("myButton").addEventListener("click", function() {
  alert("Button clicked!");
});
let fruits = ["apple", "banana", "cherry"];
for (let fruit of fruits) {
  console.log(fruit);
}
function greet(name) {
  return "Hello, " + name + "!";
}
console.log(greet("Alice"));
let number = 7;
if (number % 2 === 0) {
  console.log("Even");
} else {
  console.log("Odd");
}
function isEven(num) {
  return num % 2 === 0 ? "Even" : "Odd";
}
console.log(isEven(4)); // Output: Even
function reverseString(str) {
  return str.split('').reverse().join('');
}
console.log(reverseString("hello")); // Output: olleh
function findMax(arr) {
  return Math.max(...arr);
}
console.log(findMax([10, 20, 5, 50])); // Output: 50
function isPalindrome(str) {
  const reversed = str.split('').reverse().join('');
  return str === reversed;
}
console.log(isPalindrome("madam")); // Output: true
function getRandom() {
  return Math.floor(Math.random() * 100) + 1;
}
console.log(getRandom());
let count = 5;
const timer = setInterval(() => {
  console.log(count);
  count--;
  if (count < 0) clearInterval(timer);
}, 1000);
function isLeapYear(year) {
  return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
}
console.log(isLeapYear(2024)); // Output: true
function capitalizeWords(sentence) {
  return sentence
    .split(" ")
    .map(word => word[0].toUpperCase() + word.slice(1))
    .join(" ");
}
console.log(capitalizeWords("hello world")); // Output: Hello World
