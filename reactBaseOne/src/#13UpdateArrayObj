import { useState } from "react";

export default function Counter() {
  const [count, setCount] = useState(0);

  return (
    <div>
      <h1>{count}</h1>
      <button onClick={() => setCount(count + 1)}>Increase</button>
    </div>
  );
}
import { useEffect, useState } from "react";

export default function FetchData() {
  const [data, setData] = useState([]);

  useEffect(() => {
    fetch("https://jsonplaceholder.typicode.com/posts")
      .then((res) => res.json())
      .then((data) => setData(data));
  }, []);

  return (
    <ul>
      {data.slice(0, 5).map((item) => (
        <li key={item.id}>{item.title}</li>
      ))}
    </ul>
  );
}
import { useState } from "react";

export default function ToggleText() {
  const [show, setShow] = useState(false);

  return (
    <div>
      <button onClick={() => setShow(!show)}>
        {show ? "Hide" : "Show"} Text
      </button>
      {show && <p>Hello, I am visible!</p>}
    </div>
  );
}
import { useState } from "react";

export default function FormExample() {
  const [input, setInput] = useState("");

  return (
    <div>
      <input value={input} onChange={(e) => setInput(e.target.value)} />
      <p>You typed: {input}</p>
    </div>
  );
}
import { useState } from "react";

export default function DarkModeToggle() {
  const [dark, setDark] = useState(false);

  return (
    <div style={{ background: dark ? "#333" : "#fff", color: dark ? "#fff" : "#000", height: "100vh" }}>
      <button onClick={() => setDark(!dark)}>Toggle Dark Mode</button>
    </div>
  );
}
import { useState } from "react";

export default function Accordion() {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <div>
      <h2 onClick={() => setIsOpen(!isOpen)}>Click to {isOpen ? "Collapse" : "Expand"}</h2>
      {isOpen && <p>This is hidden content!</p>}
    </div>
  );
}
import { useState } from "react";

export default function TodoList() {
  const [todos, setTodos] = useState([]);
  const [task, setTask] = useState("");

  const addTask = () => {
    setTodos([...todos, task]);
    setTask("");
  };

  return (
    <div>
      <input value={task} onChange={(e) => setTask(e.target.value)} />
      <button onClick={addTask}>Add</button>
      <ul>
        {todos.map((todo, index) => (<li key={index}>{todo}</li>))}
      </ul>
    </div>
  );
}
