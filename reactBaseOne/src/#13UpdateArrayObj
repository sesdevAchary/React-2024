const ModuleSystem = (() => {
  const modules = {};
  return {
    define(name, deps, factory) {
      modules[name] = { deps, factory, instance: null };
    },
    require(name) {
      const m = modules[name];
      if (!m.instance) {
        m.instance = m.factory(...m.deps.map(dep => this.require(dep)));
      }
      return m.instance;
    }
  };
})();
class Observable {
  constructor() {
    this.subscribers = [];
  }

  subscribe(fn) {
    this.subscribers.push(fn);
    return () => this.subscribers = this.subscribers.filter(sub => sub !== fn);
  }

  notify(data) {
    this.subscribers.forEach(fn => fn(data));
  }
}
